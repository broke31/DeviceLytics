@startuml

title __PREDICTION's Class Diagram__\n

  namespace com.fonzp.service {
    namespace prediction {
      abstract class com.fonzp.service.prediction.AbstractPrediction {
          # classifier : FilteredClassifier
          # modelFile : File
          # doInBackground()
          {abstract} # doTaskInBackground()
          - doAfterInBackground()
          - doBeforeInBackground()
      }
    }
  }
  

  namespace com.fonzp.service {
    namespace prediction {
      class com.fonzp.service.prediction.Prediction {
          - classIndex : Integer
          - context : ApplicationContext
          - features : ArrayList<Feature>
          - inputStream : InputStream
          - message : String
          - score : long[]
          - success : boolean
          + getResult()
          + setClassIndex()
          + setInputStream()
          # doTaskInBackground()
          # getMisclassificationRate()
          # getStringValue()
      }
    }
  }
  

  namespace com.fonzp.service {
    namespace prediction {
      class com.fonzp.service.prediction.Prediction.Feature {
          # instance : HashMap<String, String>
          # label : String
          + Feature()
          + equals()
          + getInstance()
          + getLabel()
          + hashCode()
          + toString()
      }
    }
  }
  

  namespace com.fonzp.service {
    namespace prediction {
      class com.fonzp.service.prediction.Prediction.Result {
          # features : ArrayList<Feature>
          # message : String
          # misclassification : double
          # success : Boolean
          + Result()
          + equals()
          + getFeatures()
          + getMessage()
          + getMisclassification()
          + getSuccess()
          + hashCode()
          + toString()
      }
    }
  }
  

  namespace com.fonzp.service {
    namespace prediction {
      class com.fonzp.service.prediction.TrainClassifier {
          - classIndex : Integer
          - context : ApplicationContext
          - evaluation : HashMap<String, Object>
          - folds : Integer
          - includeVarsIndexes : ArrayList<String>
          - message : String
          - success : boolean
          + doTaskInBackground()
          + getResult()
          + setClassIndex()
          + setFolds()
          + setIncludeVarsIndexes()
      }
    }
  }
  

  namespace com.fonzp.service {
    namespace prediction {
      class com.fonzp.service.prediction.TrainClassifier.Result {
          # classIndex : Integer
          # evaluation : HashMap<String, Object>
          # message : String
          # success : Boolean
          # trainVars : ArrayList<String>
          + Result()
          + equals()
          + getClassIndex()
          + getEvaluation()
          + getMessage()
          + getSuccess()
          + getTrainVars()
          + hashCode()
          + toString()
      }
    }
  }
  

  com.fonzp.service.prediction.AbstractPrediction -up-|> com.fonzp.service.DatabaseTask
  com.fonzp.service.prediction.Prediction -up-|> com.fonzp.service.prediction.AbstractPrediction
  com.fonzp.service.prediction.Prediction +-down- com.fonzp.service.prediction.Prediction.Feature
  com.fonzp.service.prediction.Prediction +-down- com.fonzp.service.prediction.Prediction.Result
  com.fonzp.service.prediction.TrainClassifier -up-|> com.fonzp.service.prediction.AbstractPrediction
  com.fonzp.service.prediction.TrainClassifier +-down- com.fonzp.service.prediction.TrainClassifier.Result


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
